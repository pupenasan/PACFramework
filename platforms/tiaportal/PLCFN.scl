TYPE "PLC_ALM1"
VERSION : 0.1
   STRUCT
      ALM : Bool;
      NWALM : Bool;
      ALMNACK : Bool;
      WRN : Bool;
      NWWRN : Bool;
      WRNNACK : Bool;
      BAD : Bool;
      NWBAD : Bool;
      BADNACK : Bool;
      EMCYSTP : Bool;
      STP2RUN : Bool;
      CON2ERR : Bool;
      PLC2STOP : Bool;
      DIOERR : Bool;   // =1 - є помилка DIO
      PLCERR : Bool;   // =1 – є апаратна помилка (ПЛК)
      CONHIERR : Bool;   // помилка звязку з верхнім рівнем
   END_STRUCT;

END_TYPE

TYPE "PLS"
VERSION : 0.1
   STRUCT
      P100MS : Bool;   // 100 мс
      P200MS : Bool;   // 200 мс
      P500MS : Bool;   // 500 мс
      P1S : Bool;   // 1 с
      P2S : Bool;   // 2 с
      P5S : Bool;   // 5 с
      P10S : Bool;   // 10 с
      P60S : Bool;   // 1 хв
      M1S : Bool;   // меандр з періодом 1 с (0.5 с + 0.5 с)
      M2S : Bool;   // меандр з періодом 2 с (1 с + 1 с)
      b10 : Bool;
      b11 : Bool;
      NEWMIN : Bool;   // =1 (на один цикл основної задачі) – початок хвилини
      NEWHR : Bool;   // =1 (на один цикл основної задачі) – початок години
      NEWDAY : Bool;   // =1 (на один цикл основної задачі) – початок доби
      NEWSHIFT : Bool;   // =1 (на один цикл основної задачі) – початок зміни
   END_STRUCT;

END_TYPE

TYPE "PLC_STA"
VERSION : 0.1
   STRUCT
      CON2ERR : Bool;   // =1 - є помилка звязку з сусідні ПЛК в парі (для теплого резерування)
      PLC2STOP : Bool;   // =1 - спарений ПЛК в стопі (для теплого резерування)
      BLK : Bool;   // =1 – є хоча б один заблокований ВМ
      ALDIS : Bool;   // =1 – є хоча б одна відключена тривога
      DIOON : Bool;   // =1 - йде опитування по мережі (MODBUS або аналогічній) засобів віддаленого вводу/виводу
      DIOERR : Bool;   // =1 - є помилка на DIO
      b6 : Bool;
      FRC : Bool;   // =1 – хоча б одна змінна форсована на будь якому рівні
      SMLALL : Bool;   // =1 – все в режимі в імітації, примушує усі CM перейти в режим імітації
      DISP : Bool;   // =1 – хоча б один елемент в режимі ручного управління
      FRC2 : Bool;   // =1 – є хоча б один форсований керівний елемент (рівня 2), клапан, двигун
      FRC1 : Bool;   // =1 – хоча б одна змінна форсована (рівня 1)
      SCN1 : Bool;   // =1 – перший скан
      FRC0 : Bool;   // =1 – хоча б одна змінна форсована (рівня 0)
      SML : Bool;   // =1 – хоча б один об’єкт в режимі імітації
      CMDACK : Bool;   // =1 - підтвердження команди, команда пройшла через весь цикл задачі і отримана усіма
   END_STRUCT;

END_TYPE

TYPE "PLC_CFG"
VERSION : 0.1
   STRUCT
      ID : UInt;   // Унікальний ідентифікатор
      CLSID : UInt;   // 16#21xx
      STA : "PLC_STA";
      CMD : UInt;   // Команди з HMI
      CMDPRG : UInt;   // Команди з програмного керування (побітові)
      PRM1 : UInt;   // дискретні параметри
      PRM2 : UInt;   // дискретні параметри
      PLS : "PLS";   // бітові міандри
      ALM1 : "PLC_ALM1";   // біти алармів
      ALM2 : Int;   // біти алармів
      STEP1 : Int;   // крок основної програми
      T_STEP1 : Int;   // час кроку основної програми обробки, в (с)
      MSG : UDInt;   // для формування повідомлень, може бути як бітовим (32 повідомлення), так і числовим (за номером); передбачається, що повідомлення буде скидуватися в 0 автоматично через певний час (не менш ніж 2 інтервали опитування з HMI)
      TQ : UDInt;   // загальний час з початку 1-го циклу контролера (в секундах)
      TQM : UDInt;   // загальний час роботи ПЛК з моменту пуску (в хвилинах)
      DICNT : Int;   // кількість наявних каналів DI
      DOCNT : Int;   // кількість наявних каналів DO
      AICNT : Int;   // кількість наявних каналів AI
      AOCNT : Int;   // кількість наявних каналів AO
      NOW : Array[0..3] of Int;   // плинний час астрономічний час в BCD форматі: NOW[0] seconds,-- (16#ss,--)  NOW[1] hour, minute (16#hhmm)  NOW[2] month, day (16#mmdd)  NOW[3] year (16#yyyy)
      SHIFTPARA : Array[0..3] of Int;   // Години передачі змін (максимум 3 зміни): SHIFT[0] – кількість змін SHIFT[1] – передача 1-ї зміни (BCD 16#hhmm) SHIFT[2] – передача 2-ї зміни (BCD 16#hhmm)  SHIFT[3] – передача 3-ї зміни (BCD 16#hhmm)
      SHIFTNMB : UInt;   // номер активної зміни
      CNTALM : UInt;   // лічильник кількості активних тривог "аварія"
      CNTWRN : UInt;   // лічильник кількостіактивних тривог "попередження"
      CNTBAD : UInt;   // лічильник кількостіактивних тривог "недостовірність"
      CNTFRC : UInt;   // лічильник кількостіфорсованих об'єктів
      CNTMAN : UInt;   // лічильник кількості ВМ в ручному режимі
      TSK_LTIME : UInt;   // плинний (останній) час задачі в мілісекундах
      TSK_MAXTIME : UInt;   // максимальний час задачі в мілісекундах
      STA_PERM : UInt;   // повторює STA, який був на початку виклику функції
      ALM1_PERM : UInt;   // повторює ALM1, який був на початку виклику функції
      CNTALM_PERM : UInt := 0;   // лічильник кількості активних тривог "аварія"
      CNTWRN_PERM : UInt := 0;   // лічильник кількостіактивних тривог "попередження"
      CNTBAD_PERM : UInt := 0;   // лічильник кількостіактивних тривог "недостовірність"
      CNTFRC_PERM : UInt := 0;   // лічильник кількостіфорсованих об'єктів
      CNTMAN_PERM : UInt := 0;   // лічильник кількості ВМ в ручному режимі
      MODULSCNT : Int;   // кількість модулів
      NOWns : UDInt;   // нс (наносекунди) для плинного астрономічного часу 
      TQMS : UDInt;   // мілісекундний лічильник, скидається при старті або після переповнення 
   END_STRUCT;

END_TYPE

FUNCTION_BLOCK "PLCFN"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_IN_OUT 
      PLC : "PLC_CFG";
   END_VAR

   VAR 
      TMBITS_PREV : Int;   // попереднє значення таймерних меандрів
      MEM_RT : LReal;   // память для вимірювання часу циклу
   END_VAR

   VAR_TEMP 
      TMBITS_CUR : Int;
      RESULT : Int;
      i : Int;
      NOW {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
   END_VAR


BEGIN
	IF #PLC.STA.CMDACK THEN
	    #PLC.CMD := 0;
	END_IF;
	#PLC.STA.CMDACK := (#PLC.CMD <> 0 AND NOT #PLC.STA.CMDACK);
	#PLC.STA.SCN1 := "FirstScan";
	IF #PLC.STA.SCN1 THEN (*при першому скані*)
	    #PLC.ID := 1;             (*Ідентифікатор завжди 1*)
	    #PLC.CLSID := 16#2100;    (*Клас завжди 16#2100*)
	    #PLC.TQ := 0;
	    #TMBITS_CUR := 0;
	    #TMBITS_PREV := 0;
	    #PLC.TQMS := 0;
	END_IF;
	
	#PLC.STA_PERM.%X0 := #PLC.STA.CON2ERR;
	#PLC.STA_PERM.%X1 := #PLC.STA.PLC2STOP;
	#PLC.STA_PERM.%X2 := #PLC.STA.BLK;
	#PLC.STA_PERM.%X3 := #PLC.STA.ALDIS;
	#PLC.STA_PERM.%X4 := #PLC.STA.DIOON;
	#PLC.STA_PERM.%X5 := #PLC.STA.DIOERR;
	#PLC.STA_PERM.%X6 := #PLC.STA.b6;
	#PLC.STA_PERM.%X7 := #PLC.STA.FRC;
	#PLC.STA_PERM.%X8 := #PLC.STA.SMLALL;
	#PLC.STA_PERM.%X9 := #PLC.STA.DISP;
	#PLC.STA_PERM.%X10 := #PLC.STA.FRC2;
	#PLC.STA_PERM.%X11 := #PLC.STA.FRC1;
	#PLC.STA_PERM.%X12 := #PLC.STA.SCN1;
	#PLC.STA_PERM.%X13 := #PLC.STA.FRC0;
	#PLC.STA_PERM.%X14 := #PLC.STA.SML;
	#PLC.STA_PERM.%X15 := #PLC.STA.CMDACK;
	
	#PLC.ALM1_PERM.%X0 := #PLC.ALM1.ALM;
	#PLC.ALM1_PERM.%X1 := #PLC.ALM1.NWALM;
	#PLC.ALM1_PERM.%X2 := #PLC.ALM1.ALMNACK;
	#PLC.ALM1_PERM.%X3 := #PLC.ALM1.WRN;
	#PLC.ALM1_PERM.%X4 := #PLC.ALM1.NWWRN;
	#PLC.ALM1_PERM.%X5 := #PLC.ALM1.WRNNACK;
	#PLC.ALM1_PERM.%X6 := #PLC.ALM1.BAD;
	#PLC.ALM1_PERM.%X7 := #PLC.ALM1.NWBAD;
	#PLC.ALM1_PERM.%X8 := #PLC.ALM1.BADNACK;
	#PLC.ALM1_PERM.%X9 := #PLC.ALM1.EMCYSTP;
	#PLC.ALM1_PERM.%X10 := #PLC.ALM1.STP2RUN;
	#PLC.ALM1_PERM.%X11 := #PLC.ALM1.CON2ERR;
	#PLC.ALM1_PERM.%X12 := #PLC.ALM1.PLC2STOP;
	#PLC.ALM1_PERM.%X13 := #PLC.ALM1.DIOERR;
	#PLC.ALM1_PERM.%X14 := #PLC.ALM1.PLCERR;
	#PLC.ALM1_PERM.%X15 := #PLC.ALM1.CONHIERR;
	
	
	(*--------------------------------- таймерні біти та лічильники*)
	(*плинні значення*)
	#TMBITS_CUR.%X0 := "Clock_10Hz";         // 100MS 
	#TMBITS_CUR.%X1 := "Clock_5Hz";        // 200MS
	#TMBITS_CUR.%X2 := "Clock_2Hz";        // 500MS
	#TMBITS_CUR.%X3 := "Clock_1Hz";      // 1S
	#TMBITS_CUR.%X7 := #PLC.NOW[0] > 16#29; //min
	
	(*відловлювання імпульсів необхідних часових періодів*)
	#PLC.PLS.P100MS := #TMBITS_CUR.%X0 AND NOT #TMBITS_PREV.%X0; (*100 мс *)
	#PLC.PLS.P200MS := #TMBITS_CUR.%X1 AND NOT #TMBITS_PREV.%X1; (*200 мс*)
	#PLC.PLS.P500MS := #TMBITS_CUR.%X2 AND NOT #TMBITS_PREV.%X2; (*500 мс*)
	#PLC.PLS.P1S := #TMBITS_CUR.%X3 AND NOT #TMBITS_PREV.%X3; (*1 с*)
	#PLC.PLS.P60S := #TMBITS_CUR.%X7 AND NOT #TMBITS_PREV.%X7; (*1 хв*)
	(*підрахунок кількості секунд і хвилин*)
	IF #PLC.PLS.P1S THEN
	    #PLC.TQ := #PLC.TQ + 1;
	END_IF;  (*загальний час з початку 1-го циклу контролера (в секундах)*)
	IF #PLC.TQ > 16#7FFF_FFFF THEN
	    #PLC.TQ := 16#7FFF_FFFF;
	END_IF;
	IF #PLC.PLS.P60S AND NOT #PLC.STA.SCN1 THEN
	    #PLC.TQM := #PLC.TQM + 1;
	END_IF; (*загальний час роботи ПЛК з моменту пуску (в хвилинах)*)
	IF #PLC.TQM > 16#7FFF_FFFF THEN
	    #PLC.TQM := 16#7FFF_FFFF;
	END_IF;
	
	(*розрахунок інших часових періодів*)
	#PLC.PLS.P2S := (#PLC.TQ MOD 2) = 0 AND #PLC.PLS.P1S;(*2 с*)
	#PLC.PLS.P5S := (#PLC.TQ MOD 5) = 0 AND #PLC.PLS.P1S;(*5 с*)
	#PLC.PLS.P10S := (#PLC.TQ MOD 10) = 0 AND #PLC.PLS.P1S;(*10 с*)
	
	(* меандри *)
	#PLC.PLS.M1S := "Clock_1Hz";  (*меандр з періодом 1 с (0.5 с + 0.5 с)*)
	#PLC.PLS.M2S := "Clock_0.5Hz";;(*меандр з періодом 2 с (1 с + 1 с) *)
	
	(* астрономічний час *)
	#RESULT := RD_LOC_T(#NOW);
	#PLC.NOW[0] := INT_TO_BCD16(#NOW.SECOND); //#NOW[0] seconds,-- (16#ss,--)
	#PLC.NOW[1] := SHL(IN := INT_TO_BCD16(#NOW.HOUR), N := 8) OR INT_TO_BCD16(#NOW.MINUTE);//16#hhmm
	#PLC.NOW[2] := SHL(IN := INT_TO_BCD16(#NOW.MONTH), N := 8) OR INT_TO_BCD16(#NOW.DAY);  //16#mmdd
	#PLC.NOW[3] := SHL(IN := INT_TO_BCD16(#NOW.YEAR / 100), N := 8) OR INT_TO_BCD16(#NOW.YEAR MOD 100);; //16#yyyy
	#PLC.NOWns := #NOW.NANOSECOND;
	
	(* початок години *)
	#PLC.PLS.NEWHR := (#PLC.NOW[1] AND 16#00FF) = 0 (*хвилини*)AND #PLC.PLS.P60S (*один раз за хвилину*);
	
	(* початок доби*)
	#PLC.PLS.NEWDAY := #PLC.NOW[1] = 0 (*години_хвилини*)AND #PLC.PLS.P60S (*один раз за хвилину*);
	
	(*початок зміни*)
	IF #PLC.SHIFTPARA[0] < 1 OR #PLC.SHIFTPARA[0] > 3 THEN
	    #PLC.SHIFTPARA[0] := 2;
	END_IF;(*коректність кількості змін*)
	#PLC.PLS.NEWSHIFT := FALSE; (*скидуємо біт початку зміни*)
	FOR #i := 1 TO #PLC.SHIFTPARA[0] DO
	    (*хоча б одна з устоавок змін спрацювала*)
	    #PLC.PLS.NEWSHIFT := #PLC.PLS.NEWSHIFT OR (#PLC.SHIFTPARA[#i] = #PLC.NOW[1] (*години хвилин*)AND #PLC.PLS.P60S (*один раз за хвилину*));
	END_FOR;
	
	#TMBITS_PREV := #TMBITS_CUR;(*збереження попередніх значень*)
	
	(*----------- визначеня зміни*)
	IF #PLC.SHIFTPARA[0] > 3 OR #PLC.SHIFTPARA[0] < 2 THEN
	    #PLC.SHIFTPARA[0] := 3;
	END_IF;(*якщо кількість змін >3 або <1 - робимо 3*)
	IF #PLC.NOW[1] >= #PLC.SHIFTPARA[1] AND (#PLC.NOW[1] < #PLC.SHIFTPARA[2] OR #PLC.SHIFTPARA[2] = 16#0000) THEN (*1-ша зміна*)
	    #PLC.SHIFTNMB := 1;
	ELSE (*2-га або 3-тя*)
	    IF #PLC.SHIFTPARA[0] = 2 THEN (*якщо в 2 зміни*)
	        #PLC.SHIFTNMB := 2;
	    ELSE (*якщо 3 зміни*)
	        IF #PLC.NOW[1] >= #PLC.SHIFTPARA[2] AND (#PLC.NOW[1] < #PLC.SHIFTPARA[3] OR #PLC.SHIFTPARA[3] = 16#0000) THEN
	            #PLC.SHIFTNMB := 2;
	        ELSE
	            #PLC.SHIFTNMB := 3;
	        END_IF;
	    END_IF;
	END_IF;
	(*----------- *)
	
	(*цикли*)
	#PLC.TSK_LTIME := LREAL_TO_UINT(RUNTIME(#MEM_RT) * 1000.0);
	IF NOT "FirstScan" THEN
	    //обмеження 
	    IF #PLC.TSK_MAXTIME > 3000 THEN
	        #PLC.TSK_MAXTIME := 0;
	    END_IF;
	    IF #PLC.TSK_MAXTIME < #PLC.TSK_LTIME THEN
	        #PLC.TSK_MAXTIME := #PLC.TSK_LTIME;
	    END_IF;
	ELSE
	    #PLC.TSK_MAXTIME := 0;
	END_IF;
	#PLC.TQMS := #PLC.TQMS + #PLC.TSK_LTIME;//лічильник в мс
	
	(*скидання статусів і тривог*)
	#PLC.STA.BLK := false;
	#PLC.STA.ALDIS := false;
	#PLC.STA.FRC := false;
	#PLC.STA.SMLALL := false;
	#PLC.STA.DISP := false;
	#PLC.STA.FRC2 := false;
	#PLC.STA.FRC1 := false;
	#PLC.STA.FRC0 := false;
	#PLC.STA.SML := false;
	
	#PLC.ALM1.ALM := 0;
	#PLC.ALM1.NWALM := 0;
	#PLC.ALM1.ALMNACK := 0;
	#PLC.ALM1.WRN := 0;
	#PLC.ALM1.NWWRN := 0;
	#PLC.ALM1.WRNNACK := 0;
	#PLC.ALM1.BAD := 0;
	#PLC.ALM1.NWBAD := 0;
	#PLC.ALM1.BADNACK := 0;
	#PLC.ALM1.EMCYSTP := 0;
	#PLC.ALM1.STP2RUN := 0;
	#PLC.ALM1.CON2ERR := 0;
	#PLC.ALM1.PLC2STOP := 0;
	#PLC.ALM1.DIOERR := 0;
	#PLC.ALM1.PLCERR := 0;
	#PLC.ALM1.CONHIERR := 0;
	
	(*запамятовування лічильників*)
	#PLC.CNTALM_PERM := #PLC.CNTALM;
	#PLC.CNTWRN_PERM := #PLC.CNTWRN;
	#PLC.CNTBAD_PERM := #PLC.CNTBAD;
	#PLC.CNTFRC_PERM := #PLC.CNTFRC;
	#PLC.CNTMAN_PERM := #PLC.CNTMAN;
	
	(*скидання лічильників*)
	#PLC.CNTALM := 0;
	#PLC.CNTWRN := 0;
	#PLC.CNTBAD := 0;
	#PLC.CNTFRC := 0;
	#PLC.CNTMAN := 0;
END_FUNCTION_BLOCK

