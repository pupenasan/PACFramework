FUNCTION "ACT_POST" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_IN_OUT 
      ACTCFG : "ACTTR_CFG";
      STA : "ACTTR_STA";
      ALMs : "ACTTR_ALM";
      CMD : "ACTTR_CMD";
      "dt" : UDInt;
   END_VAR

   VAR_TEMP 
      rez : Int;
      ZERO : Array[0..3] of Byte;
      BufferPos : DInt;
   END_VAR


BEGIN
	(*кінцева обробка ВМ перед фцією act_to_XXX: оновлення загальних статусних бітів PLC, 
	обмеження лічильників тривог, запис в STA, ALM, оновлення буферу*)
	//режими - в PLC
	(*загальний біт хоча б одного ручного*)
	IF #STA.DISP THEN
	    "SYS".PLCCFG.STA.DISP := true;
	END_IF; 
	IF #STA.SML THEN
	    "SYS".PLCCFG.STA.SML := true;
	END_IF;
	IF #ACTCFG.CNTALM > 30000 THEN
	    #ACTCFG.CNTALM := 30000;
	END_IF;
	IF #ACTCFG.CNTPER > 30000 THEN
	    #ACTCFG.CNTPER := 30000;
	END_IF;
	#ACTCFG.STA := #STA;
	#ACTCFG.ALM := #ALMs;
	//обнулення усіх команд з HMI
	#ACTCFG.CMDHMI := 0;
	//обнулення усіх команд з програми
	#ZERO[0]:=0;#ZERO[1]:=0;#ZERO[2]:=0;#ZERO[3]:=0; #BufferPos := 0;
	#rez := Deserialize(SRC_ARRAY:=#ZERO, DEST_VARIABLE=> #ACTCFG.CMD, POS:=#BufferPos);
	
	//sta bits pack
	#ACTCFG.STAHMI1.%X0:= #ACTCFG.STA.IMSTPD;
	#ACTCFG.STAHMI1.%X1:= #ACTCFG.STA.MANRUNING;
	#ACTCFG.STAHMI1.%X2:= #ACTCFG.STA.STOPING;
	#ACTCFG.STAHMI1.%X3:= #ACTCFG.STA.OPNING;
	#ACTCFG.STAHMI1.%X4:= #ACTCFG.STA.CLSING;
	#ACTCFG.STAHMI1.%X5:= #ACTCFG.STA.OPND;
	#ACTCFG.STAHMI1.%X6:= #ACTCFG.STA.CLSD;
	#ACTCFG.STAHMI1.%X7:= #ACTCFG.STA.MANBXOUT;
	#ACTCFG.STAHMI1.%X8:= #ACTCFG.STA.WRKED;
	#ACTCFG.STAHMI1.%X9:= #ACTCFG.STA.DISP;
	#ACTCFG.STAHMI1.%X10:= #ACTCFG.STA.MANBX;
	#ACTCFG.STAHMI1.%X11:= #ACTCFG.STA.INBUF;
	#ACTCFG.STAHMI1.%X12:= #ACTCFG.STA.FRC;
	#ACTCFG.STAHMI1.%X13:= #ACTCFG.STA.SML;
	#ACTCFG.STAHMI1.%X14:= #ACTCFG.STA.BLCK;
	#ACTCFG.STAHMI1.%X15:= #ACTCFG.STA.STRTING;
	#ACTCFG.STAHMI2.%X0:= #ACTCFG.STA.STOPED;
	#ACTCFG.STAHMI2.%X1:= #ACTCFG.STA.SLNDBRK;
	#ACTCFG.STAHMI2.%X2:= #ACTCFG.STA.CMDACK;
	#ACTCFG.STAHMI2.%X3:= #ACTCFG.STA.SPD1;
	#ACTCFG.STAHMI2.%X4:= #ACTCFG.STA.SPD2;
	#ACTCFG.STAHMI2.%X5:= #ACTCFG.STA.WRNSPD2;
	#ACTCFG.STAHMI2.%X6:= #ACTCFG.STA.STRT_DELAY;
	#ACTCFG.STAHMI2.%X7:= #ACTCFG.STA.STOP_DELAY;
	#ACTCFG.STAHMI2.%X8:= #ACTCFG.STA.DBLCKACT;
	#ACTCFG.STAHMI2.%X9:= #ACTCFG.STA.ISREVERS;
	#ACTCFG.STAHMI2.%X10:= #ACTCFG.STA.ISANALOG;
	#ACTCFG.STAHMI2.%X11:= #ACTCFG.STA.INIOTBUF;
	#ACTCFG.STAHMI2.%X12:= #ACTCFG.STA.SPDMONON;
	#ACTCFG.STAHMI2.%X13:= #ACTCFG.STA.SPDCALIBRON;
	#ACTCFG.STAHMI2.%X14:= #ACTCFG.STA.rezb30;
	#ACTCFG.STAHMI2.%X15:= #ACTCFG.STA.rezb31;
	
	//alm bits pack
	#ACTCFG.ALMHMI1.%X0:= #ACTCFG.ALM.ALMSTRT;
	#ACTCFG.ALMHMI1.%X1:= #ACTCFG.ALM.ALMSTP;
	#ACTCFG.ALMHMI1.%X2:= #ACTCFG.ALM.ALMOPN;
	#ACTCFG.ALMHMI1.%X3:= #ACTCFG.ALM.ALMCLS;
	#ACTCFG.ALMHMI1.%X4:= #ACTCFG.ALM.ALMOPN2;
	#ACTCFG.ALMHMI1.%X5:= #ACTCFG.ALM.ALMCLS2;
	#ACTCFG.ALMHMI1.%X6:= #ACTCFG.ALM.ALMSHFT;
	#ACTCFG.ALMHMI1.%X7:= #ACTCFG.ALM.ALM;
	#ACTCFG.ALMHMI1.%X8:= #ACTCFG.ALM.ALMBELL;
	#ACTCFG.ALMHMI1.%X9:= #ACTCFG.ALM.WRN;
	#ACTCFG.ALMHMI1.%X10:= #ACTCFG.ALM.WRNSPD;
	#ACTCFG.ALMHMI1.%X11:= #ACTCFG.ALM.ALMSPD;
	#ACTCFG.ALMHMI1.%X12:= #ACTCFG.ALM.WRNSPD2;
	#ACTCFG.ALMHMI1.%X13:= #ACTCFG.ALM.ALMSPD2;
	#ACTCFG.ALMHMI1.%X14:= #ACTCFG.ALM.ALMPWR1;
	#ACTCFG.ALMHMI1.%X15:= #ACTCFG.ALM.ALMSTPBTN;
	#ACTCFG.ALMHMI2.%X0:=#ACTCFG.ALM.almrez16;
	#ACTCFG.ALMHMI2.%X1:=#ACTCFG.ALM.almrez17;
	#ACTCFG.ALMHMI2.%X2:=#ACTCFG.ALM.almrez18;
	#ACTCFG.ALMHMI2.%X3:=#ACTCFG.ALM.almrez19;
	#ACTCFG.ALMHMI2.%X4:=#ACTCFG.ALM.almrez20;
	#ACTCFG.ALMHMI2.%X5:=#ACTCFG.ALM.almrez21;
	#ACTCFG.ALMHMI2.%X6:=#ACTCFG.ALM.almrez22;
	#ACTCFG.ALMHMI2.%X7:=#ACTCFG.ALM.almrez23;
	#ACTCFG.ALMHMI2.%X8:=#ACTCFG.ALM.almrez24;
	#ACTCFG.ALMHMI2.%X9:=#ACTCFG.ALM.almrez25;
	#ACTCFG.ALMHMI2.%X10:=#ACTCFG.ALM.almrez26;
	#ACTCFG.ALMHMI2.%X11:=#ACTCFG.ALM.almrez27;
	#ACTCFG.ALMHMI2.%X12:=#ACTCFG.ALM.almrez28;
	#ACTCFG.ALMHMI2.%X13:=#ACTCFG.ALM.almrez29;
	#ACTCFG.ALMHMI2.%X14:=#ACTCFG.ALM.almrez30;
	#ACTCFG.ALMHMI2.%X15:=#ACTCFG.ALM.almrez31;
	
	
	//оновлення в буфері HMI
	//передаємо постійно в буфер тільки ті значення які змінюються постійно 
	IF #STA.INBUF THEN
	    "BUF".ACTBUF.ID := #ACTCFG.ID ;
	    "BUF".ACTBUF.CLSID := #ACTCFG.CLSID ;
	    "BUF".ACTBUF.CMDHMI := #ACTCFG.CMDHMI ;
	    "BUF".ACTBUF.STAHMI1:= #ACTCFG.STAHMI1;
	    "BUF".ACTBUF.ALMHMI1:= #ACTCFG.ALMHMI1 ;
	    "BUF".ACTBUF.STAHMI2:= #ACTCFG.STAHMI2;
	    "BUF".ACTBUF.ALMHMI2:= #ACTCFG.ALMHMI2 ;
	    "BUF".ACTBUF.STEP1:= #ACTCFG.STEP1 ;
	    "BUF".ACTBUF.T_STEP1:= #ACTCFG.T_STEP1;
	    "BUF".ACTBUF.POS := #ACTCFG.POS;
	    //"BUF".ACTBUF.POS_PV :=   #ACTCFG.POS_PV ;
	    //"BUF".ACTBUF.POS_SP :=   #ACTCFG.POS_SP ;
	    "BUF".ACTBUF.STA:=#ACTCFG.STA;
	    "BUF".ACTBUF.ALM:=#ACTCFG.ALM;
	    "BUF".ACTBUF.CNTPER:=#ACTCFG.CNTPER;
	    "BUF".ACTBUF.CNTALM:=#ACTCFG.CNTALM;
	END_IF;
	
	//онвлення в буфері IoT CFG - пишемо весь конфіг
	IF #ACTCFG.ID = "IOTDB".IOTBUF.ACT.ID THEN
	    "IOTDB".IOTBUF.ACT := #ACTCFG;
	END_IF; 
	//онвлення в буфері IoT HMI з CFG - пишемо весь конфіг
	IF #ACTCFG.ID = "IOTDB".IOTBUF.ACTH_ID THEN
	    "IOTDB".IOTBUF.ACTH := #ACTCFG;
	END_IF;  
	
	//запис інформації в контурі, якщо він привязаний
	"RW_LOOP_SEL"(direct:='w', ACT:=#ACTCFG);
	
	#ACTCFG.T_PREV := "SYS".PLCCFG.TQMS;
	#ACTCFG.T_STEP1 := #ACTCFG.T_STEP1 + #dt;
	IF #ACTCFG.T_STEP1 > 16#7FFF_FFFF THEN
	    #ACTCFG.T_STEP1 := 16#7FFF_FFFF;
	END_IF;
	
	
END_FUNCTION

